
> got@11.5.1 test /home/szm/Desktop/got
> xo && npm run build && nyc --reporter=html --reporter=text ava


  source/core/index.ts:193:2
  ⚠   193:2   Unexpected todo comment.                                                         no-warning-comments
  ⚠   572:3   Unexpected todo comment.                                                         no-warning-comments
  ⚠   661:27  Static method normalizeArguments has a complexity of 74. Maximum allowed is 20.  complexity
  ⚠   682:3   Unexpected todo comment.                                                         no-warning-comments
  ⚠   763:7   Blocks are nested too deeply (5). Maximum allowed is 4.                          max-depth
  ⚠   875:6   Unexpected todo comment.                                                         no-warning-comments
  ⚠   890:7   Unexpected todo comment.                                                         no-warning-comments
  ⚠  1047:21  Async method _finalizeBody has a complexity of 27. Maximum allowed is 20.        complexity
  ⚠  1133:23  Async method _onResponseBase has a complexity of 38. Maximum allowed is 20.      complexity
  ⚠  1167:4   Unexpected todo comment.                                                         no-warning-comments
  ⚠  1414:4   Unexpected todo comment.                                                         no-warning-comments
  ⚠  1424:5   Unexpected todo comment.                                                         no-warning-comments
  ⚠  1445:20  Async method _makeRequest has a complexity of 36. Maximum allowed is 20.         complexity
  ⚠  1727:3   Unexpected todo comment.                                                         no-warning-comments
  ⚠  1782:4   Unexpected todo comment.                                                         no-warning-comments

  test/timeout.ts:439:1
  ⚠   439:1   Unexpected todo comment.                                                         no-warning-comments
  ⚠   459:1   Unexpected todo comment.                                                         no-warning-comments
  ⚠   617:1   Unexpected todo comment.                                                         no-warning-comments
  ⚠   631:1   Unexpected todo comment.                                                         no-warning-comments

  source/create.ts:126:3
  ⚠   126:3   Unexpected todo comment.                                                         no-warning-comments
  ⚠   203:3   Unexpected todo comment.                                                         no-warning-comments
  ⚠   226:4   Unexpected todo comment.                                                         no-warning-comments

  source/core/utils/url-to-options.ts:4:1
  ⚠     4:1   Unexpected todo comment.                                                         no-warning-comments

  source/core/utils/get-buffer.ts:3:1
  ⚠     3:1   Unexpected todo comment.                                                         no-warning-comments

  test/helpers/with-server.ts:66:1
  ⚠    66:1   Unexpected todo comment.                                                         no-warning-comments

  source/as-promise/create-rejection.ts:9:7
  ⚠     9:7   Blocks are nested too deeply (5). Maximum allowed is 4.                          max-depth

  source/index.ts:68:3
  ⚠    68:3   Unexpected todo comment.                                                         no-warning-comments

  27 warnings

> got@11.5.1 build /home/szm/Desktop/got
> del-cli dist && tsc


  - error.ts › the old stacktrace is recovered
  ✔ error.ts › errors are thrown directly when options.isStream is true
  ✔ error.ts › normalization errors using convenience methods
  ✔ error.ts › `options.body` form error message
  ✔ error.ts › `http.request` error
  ✔ error.ts › `http.request` error through CacheableRequest
  ✔ error.ts › `http.request` pipe error
  ✔ error.ts › no uncaught parse errors
  ✔ create.ts › extend overwrites arrays with a deep clone
  ✔ create.ts › extend keeps the old value if the new one is undefined
  ✔ create.ts › hooks are merged on got.extend()
  ✔ create.ts › no tampering with defaults
  ✔ create.ts › can set defaults to `got.mergeOptions(...)`
  ✔ create.ts › can set mutable defaults using got.extend
  ✔ create.ts › defaults are cloned on instance creation
  ✔ create.ts › extend with instances
  ✔ create.ts › extend with a chain
  ✔ create.ts › setting dnsCache to true points to global cache
  ✔ create.ts › async handlers can throw
  ✔ error.ts › catches dns errors (267ms)
  ✔ arguments.ts › `context` option is accessible when extending instances
  ✔ arguments.ts › merges `searchParams` instances
  ✔ arguments.ts › encodes query string included in input
  ✔ arguments.ts › normalizes search params included in options
  ✔ arguments.ts › throws TypeError when `options.hooks` is not an object
  ✔ arguments.ts › throws TypeError when known `options.hooks` value is not an array
  ✔ arguments.ts › throws if cannot change `prefixUrl`
  ✔ arguments.ts › throws if the `searchParams` value is invalid
  ✔ arguments.ts › throws if `options.encoding` is `null`
  ✔ arguments.ts › `url` option and input argument are mutually exclusive
  ✔ arguments.ts › throws a helpful error when passing `followRedirects`
  ✔ arguments.ts › throws a helpful error when passing `auth`
  ✔ arguments.ts › throws on leading slashes
  ✔ arguments.ts › throws on invalid `dnsCache` option
  ✔ arguments.ts › throws on invalid `agent` option
  ✔ arguments.ts › `url` should be utf-8 encoded
  ✔ arguments.ts › throws if no arguments provided
  ✔ arguments.ts › throws when passing body with a non payload method
  ✔ arguments.ts › throws TypeError when known `options.hooks` array item is not a function
  ✔ arguments.ts › throws an error if the protocol is not specified
  ✔ arguments.ts › `url` is required (133ms)
  ✔ cookies.ts › throws on invalid `options.cookieJar.setCookie`
  ✔ cookies.ts › throws on invalid `options.cookieJar.getCookieString`
  ✔ cookies.ts › catches store errors
  ✔ cookies.ts › no unhandled errors (522ms)
  ✔ agent.ts › non-object agent option works with https (1.3s)
  ✔ agent.ts › redirects from https to http work with an agent object (1.8s)
  ✔ agent.ts › non-object agent option works with http (2.1s)
  ✔ cancel.ts › does not retry after cancelation (1.9s)
  ✔ agent.ts › redirects from http to https work with an agent object (2.2s)
  ✔ agent.ts › no socket hung up regression (2.3s)
  ✔ error.ts › no plain object restriction on json body (2.5s)
  ✔ agent.ts › socket connect listener cleaned up after request (2.6s)
  ✔ gzip.ts › decompress content (2.5s)
  ✔ gzip.ts › no unhandled `Premature close` error (2.5s)
  ✔ create.ts › carries previous instance defaults (2.5s)
  ✔ create.ts › preserves global defaults (2.5s)
  ✔ gzip.ts › handles gzip error (2.6s)
  ✔ cancel.ts › cleans up request timeouts (498ms)
  ✔ cookies.ts › does not throw on invalid cookies when options.ignoreInvalidCookies is set (2.3s)
  ✔ create.ts › custom endpoint with custom headers (extend) (2.6s)
  ✔ cookies.ts › cookies doesn't break on redirects (2.4s)
  ✔ cookies.ts › reads a cookie (2.4s)
  ✔ gzip.ts › decompress option opts out of decompressing (2.7s)
  ✔ gzip.ts › does not ignore missing data (2.7s)
  ✔ gzip.ts › decompress option doesn't alter encoding of uncompressed responses (2.7s)
  ✔ gzip.ts › does not break HEAD responses (2.7s)
  ✔ cookies.ts › throws on invalid cookies (2.4s)
  ✔ create.ts › supports invocation overrides (2.7s)
  ✔ cookies.ts › reads multiple cookies (2.5s)
  ✔ create.ts › only plain objects are freezed (2.7s)
  ✔ gzip.ts › handles gzip error - stream (2.8s)
  ✔ cookies.ts › accepts custom `cookieJar` object (2.5s)
  ✔ gzip.ts › decompress content - stream (2.8s)
  ✔ gzip.ts › response has `url` and `requestUrl` properties (2.8s)
  ✔ gzip.ts › preserves `headers` property (2.8s)
  ✔ cookies.ts › overrides options.headers.cookie (2.6s)
  ✔ create.ts › ability to pass a custom request method (2.8s)
  ✔ create.ts › supports instance defaults (2.9s)
  ✔ create.ts › custom headers (extend) (2.9s)
  ✔ create.ts › extend with custom handlers (2.8s)
  ✔ create.ts › does not include the `request` option in normalized `http` options (2.8s)
  ✔ create.ts › hooks aren't overriden when merging options (2.8s)
  ✔ create.ts › async handlers (2.8s)
  ✔ cancel.ts › cancels in-progress request (373ms)
  ✔ cache.ts › `isFromCache` stream property is undefined before the `response` event (2.8s)
  ✔ cache.ts › `isFromCache` stream property is false after the `response` event (3s)
  ✔ headers.ts › throws on null value headers
  ✔ cache.ts › non-cacheable responses are not cached (3.1s)
  ✔ cookies.ts › cookies are cleared when redirecting to a different hostname (no cookieJar) (3.1s)
  ✔ cache.ts › cache error throws `got.CacheError` (3.2s)
  ✔ cache.ts › does not break POST requests (3.3s)
  ✔ cancel.ts › cancels in-progress request with timeout (897ms)
  ✔ headers.ts › strip port in host header if explicit standard port (:80) & protocol (HTTP) (687ms)
  ✔ cache.ts › can disable cache by extending the instance (3.7s)
  ✔ cache.ts › `isFromCache` stream property is true if the response was cached (3.8s)
  ✔ headers.ts › strip port in host header if implicit standard port & protocol (HTTP) (886ms)
  ✔ headers.ts › strip port in host header if explicit standard port (:443) & protocol (HTTPS) (1s)
  ✔ cancel.ts › cancel immediately (393ms)
  ✔ hooks.ts › catches init thrown errors
  ✔ hooks.ts › passes init thrown errors to beforeError hooks (promise-only) - beforeError rejection
  ✔ hooks.ts › passes init thrown errors to beforeError hooks (promise-only)
  ✔ hooks.ts › catches beforeRequest thrown errors
  ✔ hooks.ts › catches beforeRequest promise rejections
  ✔ hooks.ts › catches beforeError errors
  ✔ hooks.ts › beforeError allows modifications
  ✔ cache.ts › DNS cache works - CacheableLookup instance (4.1s)
  ✔ cache.ts › DNS cache works (4.2s)
  ✔ headers.ts › strip port in host header if implicit standard port & protocol (HTTPS) (1.2s)
  ✔ arguments.ts › escapes `searchParams` parameter values (4.3s)
  ✔ arguments.ts › accepts legacy URL options (4.3s)
  ✔ arguments.ts › overrides `searchParams` from options (4.4s)
  ✔ arguments.ts › ignores empty searchParams object (4.4s)
  ✔ arguments.ts › does not duplicate `searchParams` (4.4s)
  ✔ arguments.ts › `prefixUrl` option works (4.4s)
  ✔ arguments.ts › `allowGetBody` option (4.4s)
  ✔ arguments.ts › `prefixUrl` can be changed if the URL contains the old one (4.4s)
  ✔ arguments.ts › strict options (4.4s)
  ✔ arguments.ts › returns streams when using `isStream` option (4.4s)
  ✔ arguments.ts › WHATWG URL support (4.4s)
  ✔ cancel.ts › throws on incomplete (canceled) response - promise (439ms)
  ✔ arguments.ts › accepts `url` as an option (4.6s)
  ✔ arguments.ts › `context` option is not enumerable (4.8s)
  ✔ arguments.ts › prefixUrl is properly replaced when extending (4.8s)
  ✔ arguments.ts › `context` option is accessible when using hooks (4.8s)
  ✔ arguments.ts › properly encodes query string (4.9s)
  ✔ arguments.ts › backslash in the end of `prefixUrl` option is optional (4.8s)
  ✔ arguments.ts › options are optional (4.9s)
  ✔ arguments.ts › allowGetBody sends json payload (4.9s)
  ✔ arguments.ts › does not throw on frozen options (4.9s)
  ✔ arguments.ts › reuse options while using init hook (4.9s)
  ✔ arguments.ts › the `searchParams` option can be a URLSearchParams (5s)
  ✔ arguments.ts › fallbacks to native http if `request(...)` returns undefined (4.9s)
  ✔ arguments.ts › methods are normalized (5s)
  ✔ arguments.ts › accepts WHATWG URL as the `prefixUrl` option (5s)
  ✔ arguments.ts › no URL pollution (5s)
  ✔ arguments.ts › allows extra keys in `options.hooks` (5s)
  ✔ arguments.ts › can omit `url` option if using `prefixUrl` (5s)
  ✔ cancel.ts › throws on incomplete (canceled) response - promise #2 (567ms)
  ✔ error.ts › promise does not hang on timeout on HTTP error (5.4s)
  ✔ headers.ts › does not remove user headers from `url` object argument (2.1s)
  ✔ headers.ts › `host` header (2.1s)
  ✔ headers.ts › transforms names to lowercase (2.1s)
  ✔ headers.ts › does not set `accept-encoding` header when `options.decompress` is false (2.1s)
  ✔ headers.ts › does not override provided `accept-encoding` (2.2s)
  ✔ headers.ts › `accept` header with `json` option (2.2s)
  ✔ headers.ts › setting `content-length` to 0 (2.2s)
  ✔ cancel.ts › throws on incomplete (canceled) response - stream (157ms)
  ✔ headers.ts › form-data automatic `content-type` header (2.2s)
  ✔ headers.ts › buffer as `options.body` sets `content-length` header (2.2s)
  ✔ headers.ts › form manual `content-type` header (2.2s)
  ✔ headers.ts › `user-agent` (2.2s)
  ✔ headers.ts › `accept-encoding` (2.2s)
  ✔ cancel.ts › recover from cancelation using cancelable promise attribute
  ✔ cancel.ts › recover from cancellation using error instance
  ✔ headers.ts › stream as `options.body` sets `content-length` header (2.3s)
  ✔ headers.ts › form-data sets `content-length` header (2.3s)
  ✔ headers.ts › preserve port in host header if non-standard port (2.3s)
  ✔ headers.ts › sets `content-length` to `0` when requesting PUT with empty body (2.3s)
  ✔ headers.ts › non-existent headers set to undefined are omitted (2.3s)
  ✔ headers.ts › form-data manual `content-type` header (2.3s)
  ✔ headers.ts › removes undefined value headers (2.3s)
  ✔ http.ts › deprecated `family` option (275ms)
  ✔ http.ts › invalid protocol throws
  ✔ hooks.ts › accepts an async function as init hook (2s)
  ✔ hooks.ts › catches beforeRedirect thrown errors (3s)
  ✔ hooks.ts › init is called with options (3s)
  ✔ hooks.ts › catches beforeRedirect promise rejections (3s)
  ✔ hooks.ts › init from defaults is called with options (3s)
  ✔ hooks.ts › init allows modifications (3s)
  ✔ hooks.ts › beforeRequest is called with options (3s)
  ✔ hooks.ts › beforeRequest allows modifications (3s)
  ✔ hooks.ts › afterResponse is called with response (3s)
  ✔ hooks.ts › afterResponse allows modifications (3s)
  ✔ hooks.ts › throwing in a beforeError hook - stream (3s)
  ✔ hooks.ts › beforeRedirect allows modifications (3.1s)
  ✔ hooks.ts › afterResponse allows to retry (3.1s)
  ✔ hooks.ts › does not break on `afterResponse` hook with JSON mode (3.1s)
  ✔ hooks.ts › beforeError is called with an error - stream (3.1s)
  ✔ hooks.ts › intentional duplicate hooks in pagination with extended instance (3.1s)
  ✔ hooks.ts › beforeRequest hook respect `url` option (3.1s)
  ✔ http.ts › status code 304 doesn't throw (1.1s)
  ✔ hooks.ts › beforeRequest hook respect `agent` option (3.1s)
  ✔ http.ts › custom `options.encoding` (1.2s)
  ✔ hooks.ts › no duplicate hook calls in single-page paginated requests (3.1s)
  ✔ hooks.ts › no duplicate hook calls in sequential paginated requests (3.1s)
  ✔ hooks.ts › no duplicate hook calls when returning original request options (3.1s)
  ✔ hooks.ts › beforeRequest hook is called before each request (3.1s)
  ✔ hooks.ts › afterResponse allows to retry - `beforeRetry` hook (3.2s)
  ✔ hooks.ts › beforeRedirect is called with options and response (3.2s)
  ✔ hooks.ts › async afterResponse allows to retry with allowGetBody and json payload (3.2s)
  ✔ hooks.ts › async hooks (3.2s)
  ✔ hooks.ts › cancelling the request after retrying in a afterResponse hook (3.2s)
  ✔ http.ts › empty response (1.2s)
  ✔ http.ts › response has `requestUrl` property (1.2s)
  ✔ http.ts › the response contains timings property (1.2s)
  ✔ http.ts › `got.stream(...).setEncoding(...)` works (1.3s)
  ✔ http.ts › `options.encoding` doesn't affect streams (1.3s)
  ✔ http.ts › DNS auto (1.3s)
  ✔ http.ts › response contains got options (1.3s)
  ✔ http.ts › does not destroy completed requests (1.3s)
  ✔ http.ts › socket destroyed by the server throws ECONNRESET (1.3s)
  ✔ http.ts › invalid dnsLookupIpVersion (1.3s)
  ✔ http.ts › simple request (1.3s)
  ✔ http.ts › `searchParams` option (1.3s)
  ✔ http.ts › response contains url (1.3s)
  ✔ http.ts › JSON request custom stringifier (1.3s)
  ✔ http.ts › DNS IPv6 (1.3s)
  ✔ http.ts › DNS IPv4 (1.3s)
  ✔ http.ts › IPv6 request (1.3s)
  ✔ hooks.ts › timeout can be modified using a hook (3.6s)
  ✔ http.ts › throws an error if the server aborted the request (4.3s)

  ✖ Exiting due to SIGINT

  1 tests were pending in test/arguments.ts

  ◌ arguments.ts › throws an error when legacy URL is passed

  10 tests were pending in test/cache.ts

  ◌ cache.ts › cacheable responses are cached
  ◌ cache.ts › cached response is re-encoded to current encoding option
  ◌ cache.ts › redirects are cached and re-used internally
  ◌ cache.ts › cached response has got options
  ◌ cache.ts › doesn't cache response when received HTTP error
  ◌ cache.ts › decompresses cached responses
  ◌ cache.ts › can replace the instance's HTTP cache
  ◌ cache.ts › does not hang on huge response
  ◌ cache.ts › cached response ETag
  ◌ cache.ts › works with http2

  2 tests were pending in test/cancel.ts

  ◌ cancel.ts › throws when canceling cached request
  ◌ cancel.ts › throws when canceling cached request #2

  7 tests were pending in test/error.ts

  ◌ error.ts › properties
  ◌ error.ts › default status message
  ◌ error.ts › custom status message
  ◌ error.ts › custom body
  ◌ error.ts › contains Got options
  ◌ error.ts › empty status message is overriden by the default one
  ◌ error.ts › errors can have request property

  1 tests were pending in test/gzip.ts

  ◌ gzip.ts › decompress content on error

  1 tests were pending in test/helpers.ts

  ◌ helpers.ts › works

  15 tests were pending in test/hooks.ts

  ◌ hooks.ts › catches beforeRetry thrown errors
  ◌ hooks.ts › catches afterResponse thrown errors
  ◌ hooks.ts › catches beforeRetry promise rejections
  ◌ hooks.ts › catches afterResponse promise rejections
  ◌ hooks.ts › returning HTTP response from a beforeRequest hook
  ◌ hooks.ts › beforeRetry is called with options
  ◌ hooks.ts › beforeRetry allows modifications
  ◌ hooks.ts › no infinity loop when retrying on afterResponse
  ◌ hooks.ts › throws on afterResponse retry failure
  ◌ hooks.ts › doesn't throw on afterResponse retry HTTP failure if throwHttpErrors is false
  ◌ hooks.ts › throwing in a beforeError hook - promise
  ◌ hooks.ts › beforeError is called with an error - promise
  ◌ hooks.ts › catches HTTPErrors
  ◌ hooks.ts › beforeError emits valid promise `HTTPError`s
  ◌ hooks.ts › hooks are not duplicated

  3 tests were pending in test/http.ts

  ◌ http.ts › http errors have `response` property
  ◌ http.ts › doesn't throw if `options.throwHttpErrors` is false
  ◌ http.ts › statusMessage fallback

  ─

  211 tests passed
  1 test skipped
---------------------------|---------|----------|---------|---------|-------------------------------
File                       | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s             
---------------------------|---------|----------|---------|---------|-------------------------------
All files                  |   72.75 |    67.93 |    61.5 |    73.2 |                               
 source                    |   60.64 |    61.47 |   55.88 |   62.13 |                               
  create.js                |   63.64 |    64.71 |   60.87 |   65.89 | ...07,113,153-199,204-208,218 
  index.js                 |      50 |       50 |   45.45 |   48.72 | 6-7,84-112                    
  types.js                 |     100 |      100 |     100 |     100 |                               
 source/as-promise         |   77.99 |    68.63 |   65.71 |   79.27 |                               
  core.js                  |   85.71 |    76.32 |      80 |   85.48 | 20-29,54,90,93,96,99          
  create-rejection.js      |   63.16 |       25 |   66.67 |   66.67 | 7-18                          
  index.js                 |   78.64 |    63.64 |   66.67 |      80 | ...01,108-109,120,124-125,130 
  types.js                 |   66.67 |       75 |      50 |   66.67 | 6-7,19-22                     
 source/core               |   75.07 |    72.71 |   65.88 |   74.93 |                               
  calculate-retry-delay.js |   46.43 |    33.33 |     100 |   44.44 | 8,16-36                       
  index.js                 |   76.16 |     74.8 |   65.06 |   76.07 | ...2,1227,1238,1256,1297-1316 
 source/core/utils         |   68.92 |    38.46 |   51.61 |   69.18 |                               
  dns-ip-version.js        |   66.67 |        0 |      50 |   66.67 | 13-16                         
  get-body-size.js         |   90.48 |    85.71 |     100 |   90.48 | 13,28                         
  get-buffer.js            |     100 |      100 |     100 |     100 |                               
  is-form-data.js          |     100 |      100 |     100 |     100 |                               
  is-response-ok.js        |     100 |       80 |     100 |     100 | 6                             
  proxy-events.js          |     100 |      100 |     100 |     100 |                               
  timed-out.js             |    53.7 |    35.71 |   28.57 |   54.72 | ...40,45,57,60-68,102,115-117 
  unhandle.js              |     100 |      100 |     100 |     100 |                               
  url-to-options.js        |      30 |        0 |       0 |      30 | 6-23                          
  weakable-map.js          |   30.77 |        0 |      25 |   30.77 | 9-26                          
 source/utils              |   71.43 |    66.67 |      50 |   71.43 |                               
  deep-freeze.js           |     100 |      100 |     100 |     100 |                               
  deprecation-warning.js   |   42.86 |        0 |       0 |   42.86 | 5-10                          
---------------------------|---------|----------|---------|---------|-------------------------------
